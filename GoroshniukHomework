import Foundation
import PlaygroundSupport
/*
 1 Use and understand Swift's basic types like Bool, Int, String, and Double
Створіть константи із вказаними значеннями двома способами (явно вказуючи тип і неявно)
Перевірте себе функцією type(of: тут вкажіть назву константи)
а) ціле число 1
b) дійсне число 1.0
с) рядок, що містить фразу Hello world!
d) рядок, що містить фразу The number is та константу з числом 42
e) хибне значення
f) істинне значення
*/

let numberOne = 1
let numberTwo: Int = 1

let numberThree = 1.0
let numberFour: Double = 1.0

let greeting = "Hello world"
let secondGreeting: String = "Hello world"

let number = 42
let stringWithNumber = "The number is \(number)"
let stringWithNumberTwo: String = "The number is \(number)"

let firstBool = true
let secondBool: Bool = true

let thirsBool = false
let fourthBool: Bool = false

type(of: fourthBool)

/*
 2 Declare and use variables and constants (var let)
a) Зробіть константу цілого типу зі значенням 3
b) Зробіть змінну типу рядок зі значенням "The three is "
c) Змініть значення змінної на таке, що містить раніше створену константу
*/

let firstNumber = 3
var variableString = "The three is "
variableString = "\(firstNumber)"

/*
 3 Handle flow control and looping constructs (if for while switch)
a) Створіть розгалуження яке до змінної b додасть число 1 якщо b додатнє і відніме - якщо від'ємне
b) Пройдіть циклом по числам від 1 до 10 і виведіть їх (використайте спочатку for потім while)
c) Використайте switch із цілочисельною змінною який виведе фразу "Low" для значень від 1 до 18, "High" для 19-36, "Zero" для 0 та "Unknown" для решти значень
*/

var b = -4

if b > 0 {
    b += 1
} else {
    b -= 1
}

for number in 1...10 {
    print(number)
}

var i = 1

while i <= 10 {
    print(i)
    i += 1
}

let range = 0...50

//switch number {
//case 1...18:
//    print("Low")
//}


/*
4 Create and use collections (Array Set Dictionary)
a) Створіть масив (Array) цілих чисел та посортуйте його
b) Створіть дві множини (Set) цілих чисел та знайдіть їх перетин
с) Створіть Dictionary в якому ключем виступає рядок а значенням будь-який тип і заповніть його
*/

var array = [1,2,3,4,5,6,7,8,9,10]

var arraySorted = array.sorted()

var firstDigits: Set = [1, 3, 5, 7, 9]
let secondDigts: Set = [0, 2, 5, 6, 7, 8, 9]

firstDigits.intersection(secondDigts)

let dict: [String : Any] = ["Number" : 1, "Word" : "Hello", "DoubleNumber" : 2.0]


/*
 5 Develop and use simple functions ( inout ->  )
а) Створіть функцію яка приймає на вхід масив і віддає найчастіше повторюване значення в ньому
b) Створіть функцію яка приймає на вхід масив і змінює його ж, додаючи до кожного значення 1
*/

func takeNumaber(_ numbers: [Int]) {
    let duplicateNumbers = numbers.map({ $0 + 1 })
    print(duplicateNumbers)
}

var myArray = [1, 2, 2, 3, 4, 5, 5, 5, 5, 6, 7, 8, 9, 9, 9]



func addNumberToArray(_ array: inout Array<Int>)  {
    array.enumerated().forEach { (offset, element) in
        array[offset] += 1
    }
}
addNumberToArray(&myArray)

/*
 6-7 Cast objects safely from one type to another ( as! as? as init). Handle optionals and unwrap them safely (if let ; guard let ; != nil)
Створіть функцію яка приймає на вхід змінну типу Any? і вертає рядок в якому міститься тип значення переданої змінної.
(!) Для виконання цього завдання НЕ використовуйте метод type(of: ).
(!!) Для виконання цього завдання МОЖНА використовувати наступні конструкції (спробуйте кожну з них в окремії функції)
a) `if let`
b) `guard let`
c) switch.
*/

func take(_ element: Any?) -> String {
    guard let element = element as? String else {
        return ""
    }
    return element
}
